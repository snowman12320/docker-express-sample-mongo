name: Build and Push Docker Image and Upate Cloud Server

# 當推送符合 'v*' 模式的標籤時觸發此工作流程
on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 作業系統運行此工作流程

    steps:
      # 儲存庫程式碼
      - name: Checkout repository
        uses: actions/checkout@v2

      # 設置 SSH 代理
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 設置 Docker Buildx 環境
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # 登入 Docker Hub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }} # 使用儲存在 Secrets 中的 Docker Hub 使用者名稱
          password: ${{ secrets.DOCKER_HUB_TOKEN }} # 使用儲存在 Secrets 中的 Docker Hub 訪問令牌

      # 建置並推送 Docker image
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: . # 設定建置上下文為當前目錄
          push: true # 在建置完成後推送映像到 Docker Hub
          platforms: linux/amd64,linux/arm64 # 目標平台為 AMD64 和 ARM64
          tags: | # 設定 Docker 映像的標籤 # /後方是儲存酷名稱
            ${{ secrets.DOCKER_HUB_USERNAME }}/docker-express-sample-mongo:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/docker-express-sample-mongo:${{ github.ref_name }}

      # 從 Docker Hub 登出
      - name: Logout from DockerHub
        run: docker logout

      # 可加入多個環境變數
      - name: Create .env file
        run: |
          echo VARIABLE=${{ secrets.ENV_VARIABLE }} >> .env

      # 確保資料夾是存在的
      # - name: Create directory if not exists
      #   run: ssh root@${{ secrets.HOST_NAME }} "mkdir -p ~/docker-express-sample-mongo/"

      # 上傳環境變數
      - name: Transfer .env file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST_NAME }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: ".env"
          target: "~/docker-express-sample-mongo/"

      # 將遠端伺服器新增到 known_hosts
      - name: Add remote server to known_hosts
        run: ssh-keyscan -H ${{ secrets.HOST_NAME }} >> ~/.ssh/known_hosts

      # 在遠端伺服器上執行命令
      - name: Execute commands on remote server
        run: |
          ssh root@${{ secrets.HOST_NAME }} "
          cd docker-express-sample-mongo/
          docker-compose pull
          docker-compose --env-file $HOME/docker-express-sample-mongo/.env up -d
          "
